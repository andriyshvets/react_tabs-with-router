{"version":3,"sources":["components/HomePage/HomePage.tsx","components/TabsContent/TabsContent.tsx","components/TabsPage/TabsPage.tsx","components/NotFoundPage/NotFoundPage.tsx","components/Navigation/Navigation.tsx","App.tsx","index.tsx"],"names":["HomePage","className","TabsContent","content","tabs","id","title","TabsPage","tabId","useParams","useState","currentTab","setCurrentTab","isIdValid","setIsIdValid","useEffect","tab","find","t","map","to","isActive","NotFoundPage","Navigation","App","path","element","ReactDOM","render","document","getElementById"],"mappings":"oNAEaA,EAAe,kBAC1B,oBAAIC,UAAU,QAAd,wB,cCGWC,EAAyB,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OACpC,mBAAGF,UAAU,gBAAb,SAA8BE,KCH1BC,EAAO,CACX,CAAEC,GAAI,QAASC,MAAO,QAASH,QAAS,eACxC,CAAEE,GAAI,QAASC,MAAO,QAASH,QAAS,eACxC,CAAEE,GAAI,QAASC,MAAO,QAASH,QAAS,gBAS7BI,EAAe,WAC1B,IAAQC,EAAUC,cAAVD,MACR,EAAoCE,mBAAqB,MAAzD,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAAkCF,oBAAS,GAA3C,mBAAOG,EAAP,KAAkBC,EAAlB,KAUA,OARAC,qBAAU,WACR,IAAMC,EAAMZ,EAAKa,MAAK,SAAAC,GAAC,OAAIA,EAAEb,KAAOG,MAAU,KAI9C,OAFAI,EAAcI,GAEDF,IAANE,KACN,CAACR,IAGF,qCACE,qBAAKP,UAAU,4BAAf,SACE,oBAAIA,UAAU,aAAd,SACGG,EAAKe,KAAI,SAAAH,GAAG,OACX,oBAEEf,UAAU,aAFZ,SAIE,cAAC,IAAD,CACEmB,GAAE,gBAAWJ,EAAIX,IACjBJ,UAAW,qBAAGoB,SACD,gCAAkC,cAHjD,SAKGL,EAAIV,SARFU,EAAIX,YAefQ,GAAa,oDAEdF,GAAc,cAAC,EAAD,CAAaR,QAASQ,EAAWR,cClDzCmB,G,MAAmB,kBAC9B,oBAAIrB,UAAU,QAAd,8BCAWsB,EAAiB,kBAC5B,qBAAKtB,UAAU,oBAAf,SACE,sBAAKA,UAAU,eAAf,UACE,cAAC,IAAD,CACEmB,GAAG,IACHnB,UAAW,qBAAGoB,SACD,kCAAoC,eAHnD,kBAOA,cAAC,IAAD,CACED,GAAG,QACHnB,UAAW,qBAAGoB,SACD,kCAAoC,eAHnD,wBCUSG,EAdC,kBACd,sBAAKvB,UAAU,MAAf,UACE,cAAC,EAAD,IAEA,eAAC,IAAD,WACE,cAAC,IAAD,CAAOwB,KAAK,IAAIC,QAAS,cAAC,EAAD,MACzB,cAAC,IAAD,CAAOD,KAAK,QAAQC,QAAS,cAAC,EAAD,IAA7B,SACE,cAAC,IAAD,CAAOD,KAAK,aAEd,cAAC,IAAD,CAAOA,KAAK,IAAIC,QAAS,cAAC,EAAD,aCd/BC,IAASC,OACP,cAAC,IAAD,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.6788782e.chunk.js","sourcesContent":["import { FC } from 'react';\n\nexport const HomePage: FC = () => (\n  <h1 className=\"title\">Home Page</h1>\n);\n","import { FC } from 'react';\n\ninterface Props {\n  content: string,\n}\n\nexport const TabsContent: FC<Props> = ({ content }) => (\n  <p className=\"tabs__content\">{content}</p>\n);\n","import { FC, useEffect, useState } from 'react';\nimport { NavLink, useParams } from 'react-router-dom';\nimport { TabsContent } from '../TabsContent/TabsContent';\n\nconst tabs = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\ninterface Tab {\n  id: string,\n  title: string,\n  content: string,\n}\n\nexport const TabsPage: FC = () => {\n  const { tabId } = useParams();\n  const [currentTab, setCurrentTab] = useState<Tab | null>(null);\n  const [isIdValid, setIsIdValid] = useState(false);\n\n  useEffect(() => {\n    const tab = tabs.find(t => t.id === tabId) || null;\n\n    setCurrentTab(tab);\n\n    return tab ? setIsIdValid(true) : setIsIdValid(false);\n  }, [tabId]);\n\n  return (\n    <>\n      <div className=\"tabs is-centered is-boxed\">\n        <ul className=\"tabs__list\">\n          {tabs.map(tab => (\n            <li\n              key={tab.id}\n              className=\"tabs__item\"\n            >\n              <NavLink\n                to={`/tabs/${tab.id}`}\n                className={({ isActive }) => (\n                  isActive ? 'tabs__link tabs__link--active' : 'tabs__link')}\n              >\n                {tab.title}\n              </NavLink>\n            </li>\n          ))}\n        </ul>\n      </div>\n\n      {!isIdValid && <p>Please select a tab</p>}\n\n      {currentTab && <TabsContent content={currentTab.content} />}\n    </>\n  );\n};\n","import { FC } from 'react';\n\nexport const NotFoundPage: FC = () => (\n  <h1 className=\"title\">Page not found</h1>\n);\n","import { FC } from 'react';\nimport { NavLink } from 'react-router-dom';\n\nexport const Navigation: FC = () => (\n  <div className=\"navbar has-shadow\">\n    <nav className=\"navbar-brand\">\n      <NavLink\n        to=\"/\"\n        className={({ isActive }) => (\n          isActive ? 'navbar-item--active navbar-item' : 'navbar-item')}\n      >\n        Home\n      </NavLink>\n      <NavLink\n        to=\"/tabs\"\n        className={({ isActive }) => (\n          isActive ? 'navbar-item--active navbar-item' : 'navbar-item')}\n      >\n        Tabs\n      </NavLink>\n    </nav>\n  </div>\n);\n","import { FC } from 'react';\nimport { Route, Routes } from 'react-router-dom';\nimport './App.scss';\nimport { HomePage } from './components/HomePage/HomePage';\nimport { TabsPage } from './components/TabsPage/TabsPage';\nimport 'bulma';\nimport { NotFoundPage } from './components/NotFoundPage/NotFoundPage';\nimport { Navigation } from './components/Navigation/Navigation';\n\nconst App: FC = () => (\n  <div className=\"App\">\n    <Navigation />\n\n    <Routes>\n      <Route path=\"/\" element={<HomePage />} />\n      <Route path=\"/tabs\" element={<TabsPage />}>\n        <Route path=\":tabId\" />\n      </Route>\n      <Route path=\"*\" element={<NotFoundPage />} />\n    </Routes>\n  </div>\n);\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport App from './App';\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}